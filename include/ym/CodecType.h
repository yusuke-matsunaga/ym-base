#ifndef YM_CODECTYPE_H
#define YM_CODECTYPE_H

/// @file ym/CodecType.h
/// @brief CodecType の定義ファイル
/// @author Yusuke Matsunaga (松永 裕介)
///
/// Copyright (C) 2013, 2014, 2018, 2021, 2022 Yusuke Matsunaga
/// All rights reserved.

#include "ym_config.h"


// 型の前方定義
enum lzma_check;

BEGIN_NAMESPACE_YM

//////////////////////////////////////////////////////////////////////
/// @brief FileCoder/FileDecoder の種類
//////////////////////////////////////////////////////////////////////
enum class CodecType {
  Through, ///< 無変換
  Z,       ///< compress (Z)
  Gzip,    ///< gzip
  Bzip2,   ///< bzip2
  Lzma     ///< lzma (xz)
};


//////////////////////////////////////////////////////////////////////
/// @class CodecParam CodecParam.h "CodecParam.h"
/// @brief CODEC の初期化用パラメータを表すクラス
//////////////////////////////////////////////////////////////////////
class CodecParam
{
public:

  /// @brief デストラクタ
  virtual
  ~CodecParam() = default;


public:
  //////////////////////////////////////////////////////////////////////
  // 外部インターフェイス
  //////////////////////////////////////////////////////////////////////

  /// @brief タイプを返す．
  virtual
  CodecType
  type() const = 0;


public:
  //////////////////////////////////////////////////////////////////////
  // Z(compress) 圧縮の初期化パラメータ
  //////////////////////////////////////////////////////////////////////

  /// @brief Z(compress) 圧縮のレベルを返す．
  virtual
  int
  z_level() const;


public:
  //////////////////////////////////////////////////////////////////////
  // bzip2 圧縮の初期化パラメータ
  //////////////////////////////////////////////////////////////////////

  /// @brief bzip2 圧縮の作業用のメモリサイズを返す．
  virtual
  int
  bz_block_size_100k() const;

  /// @brie bzip2 圧縮のデバッグ出力レベルを返す．
  virtual
  int
  bz_verbosity() const;

  /// @brief bzip2 圧縮のアルゴリズム用パラメータを返す．
  virtual
  int
  bz_work_factor() const;


public:
  //////////////////////////////////////////////////////////////////////
  // gzip 圧縮の初期化パラメータ
  //////////////////////////////////////////////////////////////////////

  /// @brief gzip 圧縮のレベルを返す．
  virtual
  int
  gz_level() const;


public:
  //////////////////////////////////////////////////////////////////////
  // lzma(xz) 圧縮の初期化パラメータ
  //////////////////////////////////////////////////////////////////////

  /// @brief lzma 圧縮のレベルを返す．
  virtual
  int
  xz_preset() const;

  /// @brief lzma 圧縮のチェック方法を返す．
  virtual
  lzma_check
  xz_check() const;


public:
  //////////////////////////////////////////////////////////////////////
  // lzma(xz) 伸張の初期化パラメータ
  //////////////////////////////////////////////////////////////////////

  /// @brief lzma 伸張のメモリ量を返す．
  virtual
  SizeType
  xz_memlimit() const;

  /// @brief lzma 伸張の制御フラグを返す．
  virtual
  int
  xz_flags() const;

};


/// @relates CodecType
/// @brief 実際に利用可能な codec type のリストを返す関数
///
/// Through, Z 以外は対象のライブラリが見つからなければ存在しない．
extern
vector<CodecType> get_codec_type_list();

END_NAMESPACE_YM

#endif // YM_CODECTYPE_H
